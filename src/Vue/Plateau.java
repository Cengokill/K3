/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vue;

import java.awt.Graphics;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

/**
 *
 * @author Said
 */
public class Plateau extends javax.swing.JFrame {

    /**
     * Creates new form Plateau
     */
    public Plateau() {
        initComponents();
       

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 348, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 243, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 314, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 297, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 156, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Plateau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Plateau().setVisible(true);
            }
        });
    }
    
    @Override
   public void paint(Graphics g) {
      
       try {
          File bg = new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\bg5.jpg");
           BufferedImage imageback = ImageIO.read(bg);
            g.drawImage(imageback, this.getX(), this.getY(), this.getWidth(),this.getHeight(),null); 
       }
        catch (IOException e) {
            e.printStackTrace();
        }

        
                                    
       try {
       
       
       Point test = jPanel2.getLocationOnScreen();
       Point test2 = jPanel3.getLocationOnScreen();
                  File file = new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\BLACK.png");
                  
            BufferedImage image = ImageIO.read(file);
            
             File file2= new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\RED.png");
                  
            BufferedImage image2 = ImageIO.read(file2);
            
             File file3 = new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\BLUE.png");
                  
            BufferedImage image3 = ImageIO.read(file3);
            
             File file4 = new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\WOOD.png");
                  
            BufferedImage image4 = ImageIO.read(file4);
            
             File file5 = new File("C:\\Users\\farid\\Documents\\NetBeansProjects\\K3\\src\\main\\java\\ressources\\YELLOW.png");
                  
            BufferedImage image5 = ImageIO.read(file5);
       
  
        int uniteX = jPanel2.getWidth()/5;
        int uniteY = (jPanel2.getHeight()/5);
        
        int uniteX2 = jPanel3.getWidth()/5;
        int uniteY2 = jPanel3.getHeight()/5;
        
        for(int i =0; i< 5; i++) { // colone
           
            for(int j = 0; j < 5; j++) { // ligne
                if(i == 0 && ( j ==4)) {
                    g.drawImage(image,test.x+(i*uniteX), test.y+(j*uniteY), uniteX, uniteY,null);
                }
               
                if(i == 1 && (  j == 3 || j ==4 )) {if( j ==3) {
                    
                    g.drawImage(image,(test.x+(i*uniteX))-(uniteX/2), test.y+(j*uniteY), uniteX, uniteY,null);

                }
                else {
                                        g.drawImage(image,(test.x+(i*uniteX)), test.y+(j*uniteY), uniteX, uniteY,null);

                }
                }
               
                if(i == 2 && (  j == 0 || j == 1 || j == 2 || j == 3 || j ==4 )) {
                    
                    switch (j) {
                        case 1:
                        case 3:
                            g.drawImage(image2,(test.x+(i*uniteX))-(uniteX/2), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        case 2:
                            g.drawImage(image3,(test.x+(i*uniteX))-(uniteX), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        default:
                            g.drawImage(image4,(test.x+(i*uniteX)), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                    }
                }
               if(i == 3 && (j == 1 || j == 2 || j == 3 || j ==4)){
                    switch (j) {
                        case 1:
                        case 3:
                            g.drawImage(image,(test.x+(i*uniteX))-(uniteX/2), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        case 2:
                            g.drawImage(image,(test.x+(i*uniteX))-(uniteX), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        default:
                            g.drawImage(image,(test.x+(i*uniteX)), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                    }
                }
               
               
            
                if(i == 4 && ( j == 2 || j == 3 || j ==4)){
                    switch (j) {
                        case 3:
                            g.drawImage(image,(test.x+(i*uniteX))-(uniteX/2), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        case 2:
                            g.drawImage(image4,(test.x+(i*uniteX))-(uniteX), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                        default:
                            g.drawImage(image5,(test.x+(i*uniteX)), test.y+(j*uniteY), uniteX, uniteY,null);
                            break;
                    }
                    }
                    
              

                
                
                
                
	    }
        }
        
        
        for(int i =0; i< 5; i++) { // colone
           
            for(int j = 0; j < 5; j++) { // ligne
                if(i == 0 && ( j ==4)) {
                    g.drawImage(image5,test2.x+(i*uniteX2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                }
               
                if(i == 1 && (  j == 3 || j ==4 )) {if( j ==3) {
                    
                    g.drawImage(image2,(test2.x+(i*uniteX2))-(uniteX2/2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);

                }
                else {
                                        g.drawImage(image,(test2.x+(i*uniteX2)), test2.y+(j*uniteY2), uniteX2, uniteY2,null);

                }
                }
               
                if(i == 2 && (  j == 0 || j == 1 || j == 2 || j == 3 || j ==4 )) {
                    
                    switch (j) {
                        case 1:
                        case 3:
                            g.drawImage(image,(test2.x+(i*uniteX2))-(uniteX2/2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                        case 2:
                            g.drawImage(image,(test2.x+(i*uniteX2))-(uniteX2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                        default:
                            g.drawImage(image3,(test2.x+(i*uniteX2)), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                    }
                }
               if(i == 3 && (j == 1 || j == 2 || j == 3 || j ==4)){
                    switch (j) {
                        case 1:
                        case 3:
                            g.drawImage(image,(test2.x+(i*uniteX2))-(uniteX2/2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                        case 2:
                            g.drawImage(image,(test2.x+(i*uniteX2))-(uniteX2), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                        default:
                            g.drawImage(image4,(test2.x+(i*uniteX2)), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                    }
                }
               
               
            
                if(i == 4 && ( j == 2 || j == 3 || j ==4)){
                    switch (j) {
                        case 3:
                            g.drawImage(image,(test2.x+(i*uniteX2))-(uniteX2/2), test2.y+(j*uniteY), uniteX2, uniteY2,null);
                            break;
                        case 2:
                            g.drawImage(image2,(test2.x+(i*uniteX2))-(uniteX2), test2.y+(j*uniteY), uniteX2, uniteY2,null);
                            break;
                        default:
                            g.drawImage(image5,(test2.x+(i*uniteX2)), test2.y+(j*uniteY2), uniteX2, uniteY2,null);
                            break;
                    }
                    }
                    
              

                
                
                
                
	    }
        }
        
        
        
        
       Point test3 = jPanel1.getLocationOnScreen();
 
       
     
       
  
        int uniteX3 = jPanel1.getWidth()/9;
        int uniteY3 = jPanel1.getHeight()/9;
        
         for(int i =0; i< 9; i++) { // colone
           switch (i) {
               case 2: 
                   g.drawImage(image3,(test3.x+(i*uniteX3)), test3.y +(uniteY3*2) , uniteX3, uniteY3,null);
                   break;
               case 3:
               case 7:
                   g.drawImage(image2,(test3.x+(i*uniteX3)), test3.y +(uniteY3*2) , uniteX3, uniteY3,null);
                   break;
               case 9:
               case 1:
               case 4:
                   g.drawImage(image4,(test3.x+(i*uniteX3)), test3.y +(uniteY3*2) , uniteX3, uniteY3,null);
                   break;
               default:
                   g.drawImage(image,(test3.x+(i*uniteX3)), test3.y +(uniteY3*2) , uniteX3, uniteY3,null);
                   break;
           }
             

         }
         
         
         Point test4 = jPanel4.getLocationOnScreen();
 
       
     
       
  
        int uniteX4 = jPanel4.getWidth()/7;
        int uniteY4 = jPanel4.getHeight()/7;
        
         for(int i =0; i< 4; i++) { // colone
           switch (i) {
               case 2: 
                   g.drawImage(image3,4/3*(test3.x+(i*uniteX4*2)), test4.y +(uniteY4*5) , uniteX4, uniteY4,null);
                   break;
               case 3:
               case 7:
                   g.drawImage(image2,4/3*(test3.x+(i*uniteX4*2)), test4.y +(uniteY4*5) , uniteX4, uniteY4,null);
                   break;
               case 9:
               case 1:
               case 4:
                   g.drawImage(image4,4/3*(test3.x+(i*uniteX4*2)), test4.y +(uniteY4*5) , uniteX4, uniteY4,null);
                   break;
               default:
                   g.drawImage(image,4/3*(test3.x+(i*uniteX4*2)), test4.y +(uniteY4*5) , uniteX4, uniteY4,null);
                   break;
           }
             

         }
        
        
        
        
        
       
          } catch (IOException e) {
            e.printStackTrace();
        }

       
       
   }
   
   public void setrepaint() {
       repaint();
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
